<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/03/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hello-wold2.md</title>
    <url>/2021/03/04/hello-wold2-md/</url>
    <content><![CDATA[<p>这是我的第一篇博客<br>66666666666666666</p>
]]></content>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2021/03/04/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>是什么东西</p>
]]></content>
  </entry>
  <entry>
    <title>初识JDBC</title>
    <url>/2021/03/04/%E5%88%9D%E8%AF%86JDBC/</url>
    <content><![CDATA[<h1 id="java代码连接数据库"><a href="#java代码连接数据库" class="headerlink" title="java代码连接数据库"></a>java代码连接数据库</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;如果需要建议连接，java中提供了一套标准，数据库厂商来进行实现，包含实现子类，实子类的jar文件再哪？</span><br><span class="line">&#x2F;&#x2F;一般情况下存放在安装目录下</span><br><span class="line">public class JDBCTest &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;1、加载驱动:</span><br><span class="line">        &#x2F;*</span><br><span class="line">        * 当执行了当前代码之后，会返回一个Class对象，再此对象的创建过程中，会调用具体类的静态代码块</span><br><span class="line">        * *&#x2F;</span><br><span class="line">       Class.forName(&quot;oracle.jdbc.driver.OracleDriver&quot;);</span><br><span class="line">       &#x2F;&#x2F;2、建立连接</span><br><span class="line">        &#x2F;&#x2F;第一步中已经经driver对象初测到了drivermanager中，所以此时可以直接通过DriverManager来获取数据库的连接</span><br><span class="line">        &#x2F;*</span><br><span class="line">        * 需要输入连接数据库的参数</span><br><span class="line">        * url:数据库的地址</span><br><span class="line">        * username:用户名</span><br><span class="line">        * password:密码</span><br><span class="line">        *</span><br><span class="line">        * *&#x2F;</span><br><span class="line">        Connection connection &#x3D; DriverManager.getConnection(&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;, &quot;scott&quot;, &quot;tiger&quot;);</span><br><span class="line">        &#x2F;&#x2F;3、测试连接是否成功</span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        &#x2F;&#x2F;4、定义sql语句</span><br><span class="line">        &#x2F;&#x2F;只要填写正常执行的sql语句即可</span><br><span class="line">        String sql &#x3D; &quot;select * from emp&quot;;</span><br><span class="line">        &#x2F;&#x2F;5、准备静态处理块对象，将sql语句放置到静态处理块中,理解为sql语句放置对象</span><br><span class="line">        &#x2F;*</span><br><span class="line">        * 在执行sql语句的过程中，需要一个对象来存放sql语句，将对象进行执行的时候调用的是数据库的服务，数据库会从当前对象中</span><br><span class="line">        * 拿到对应的sql语句进行执行</span><br><span class="line">        *</span><br><span class="line">        * *&#x2F;</span><br><span class="line">        Statement statement &#x3D; connection.createStatement();</span><br><span class="line">        &#x2F;&#x2F;6、执行sql语句,返回值对象是结果集合</span><br><span class="line">        &#x2F;*</span><br><span class="line">        * 将结果放到resultset中，是返回结果的一个集合</span><br><span class="line">        * 需要经过循环迭代才能获取到其中的每一条记录</span><br><span class="line">        *</span><br><span class="line">        * statement在执行的时候可以选择三种方式：</span><br><span class="line">        * 1、execute:任何SQL语句都可以执行</span><br><span class="line">        * 2、executeQueryL只能执行查询语句</span><br><span class="line">        * 3、executeUpdate，只能执行语句</span><br><span class="line">        * *&#x2F;</span><br><span class="line">        ResultSet resultSet &#x3D; statement.executeQuery(sql);</span><br><span class="line">        &#x2F;&#x2F;7、循环处理</span><br><span class="line">        &#x2F;&#x2F;使用while循环，有两种获取具体值的方式，第一种通过下表索引编号来获取，从1开始，第二种是通过列名来获取，哪种好？推荐使用列名，列明一般不会发生修改</span><br><span class="line">        while(resultSet.next())&#123;</span><br><span class="line">            int anInt &#x3D; resultSet.getInt(1);</span><br><span class="line">            System.out.println(anInt);</span><br><span class="line">            String ename &#x3D; resultSet.getString(&quot;ename&quot;);</span><br><span class="line">            System.out.println(ename);</span><br><span class="line">            System.out.println(&quot;-----------------&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;8、关闭连接</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
